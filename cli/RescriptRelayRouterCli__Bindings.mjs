// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as $$Crypto from "crypto";
import * as Cosmiconfig from "cosmiconfig";

var Watcher = {};

var Chokidar = {
  Watcher: Watcher
};

var Path = {};

var $$Node = {};

var Process = {};

var Glob = {};

function make(str) {
  return $$Crypto.createHash("sha1").update(str).digest("base64");
}

function writeFileIfChanged(path, content) {
  if (Fs.existsSync(path)) {
    var existingFileContent = Fs.readFileSync(path, "utf-8");
    if (make(existingFileContent) !== make(content)) {
      Fs.writeFileSync(path, content);
      return ;
    } else {
      return ;
    }
  }
  Fs.writeFileSync(path, content);
  
}

var Fs$1 = {
  writeFileIfChanged: writeFileIfChanged
};

var $$URL = {};

var FuzzySearch = {};

var LinesAndColumns = {};

var CosmiConfig = {
  make: (function (prim) {
      return Cosmiconfig.cosmiconfigSync("rescriptRelayRouter");
    })
};

export {
  Chokidar ,
  Path ,
  $$Node ,
  Process ,
  Glob ,
  Fs$1 as Fs,
  $$URL ,
  CosmiConfig ,
  FuzzySearch ,
  LinesAndColumns ,
  
}
/* fs Not a pure module */
