// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as RelayRouter from "./RelayRouter.mjs";
import * as ReactRouter from "react-router";

function childRouteHasContent(childRoute) {
  return Caml_obj.caml_notequal(childRoute, null);
}

function useRouter(param) {
  var match = RelayRouter.useRouterContext(undefined);
  var postRouterEvent = match.postRouterEvent;
  var history = match.history;
  var get = match.get;
  var push = React.useCallback((function (path) {
          Curry._1(postRouterEvent, {
                TAG: /* OnBeforeNavigation */0,
                currentLocation: Curry._1(get, undefined).location
              });
          history.push(path);
          
        }), [
        history,
        postRouterEvent
      ]);
  var replace = React.useCallback((function (path) {
          Curry._1(postRouterEvent, {
                TAG: /* OnBeforeNavigation */0,
                currentLocation: Curry._1(get, undefined).location
              });
          history.replace(path);
          
        }), [
        history,
        postRouterEvent
      ]);
  return {
          push: push,
          replace: replace,
          preload: match.preload,
          preloadCode: match.preloadCode
        };
}

function useLocation(param) {
  var router = RelayRouter.useRouterContext(undefined);
  var match = React.useState(function () {
        return router.history.location;
      });
  var setLocation = match[1];
  React.useEffect((function () {
          return router.history.listen(function (param) {
                      var $$location = param.location;
                      return Curry._1(setLocation, (function (param) {
                                    return $$location;
                                  }));
                    });
        }), [router.history]);
  return match[0];
}

function isRouteActive(pathname, routePattern, exactOpt, param) {
  var exact = exactOpt !== undefined ? exactOpt : false;
  return Belt_Option.isSome(Caml_option.nullable_to_opt(ReactRouter.matchPath({
                      path: routePattern,
                      end: exact
                    }, pathname)));
}

function useIsRouteActive(href, routePattern, exactOpt, param) {
  var exact = exactOpt !== undefined ? exactOpt : false;
  var match = useLocation(undefined);
  var pathname = match.pathname;
  return React.useMemo((function () {
                return isRouteActive(pathname, routePattern, exact, undefined);
              }), [
              pathname,
              href,
              routePattern,
              exact
            ]);
}

export {
  childRouteHasContent ,
  useRouter ,
  useLocation ,
  isRouteActive ,
  useIsRouteActive ,
  
}
/* react Not a pure module */
